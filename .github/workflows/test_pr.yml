name: CI
on:
  pull_request:
    branches:
      - "*"

concurrency:
  # For PRs, later CI runs preempt previous ones. e.g. a force push on a PR
  # cancels running CI jobs and starts all new ones.
  #
  # For non-PR pushes, concurrency.group needs to be unique for every distinct
  # CI run we want to have happen. Use run_id, which in practice means all
  # non-PR CI runs will be allowed to run without preempting each other.
  group: ${{ github.workflow }}-$${{ github.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go-version: ["1.25.0"]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod download

      - name: Install dependencies for mkcert
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-tools

      - name: Install mkcert
        run: |
          go install filippo.io/mkcert@latest
          # Add mkcert to the PATH if not already there
          echo "PATH=$(go env GOPATH)/bin:$PATH" >> $GITHUB_ENV
          mkcert -install

      - name: Unit and Integration test
        env:
          CL_INFOCLACE_SSH: ${{ secrets.CL_INFOCLACE_SSH }}
          CL_GITHUB_SECRET: ${{ secrets.CL_GITHUB_SECRET }}
          TEST_PAT: ${{ secrets.TEST_PAT }}
        run: |
          export OPENRUN_HOME=`pwd`
          export GOEXPERIMENT=greenteagc
          rm -rf internal/server/appspecs && cd internal/server
          git clone --single-branch --depth 1 https://github.com/openrundev/appspecs.git
          rm -rf appspecs/.git
          cd $OPENRUN_HOME

          go install github.com/commander-cli/commander/v2/cmd/commander@latest
          export CL_CONTAINER_COMMANDS=disable # pull requests uses github runner, docker/podman does not run
          gmake covtest

      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
